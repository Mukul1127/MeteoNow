---
/*
  MeteoWeather is a Accurate Weather App 
  Copyright (C) 2024 Mukul Kedia

  MeteoWeather is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published
  by the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  MeteoWeather is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with MeteoWeather. If not, see <https://www.gnu.org/licenses/>.
*/

import Layout from "@/layouts/Layout.astro";
import Nav from "@/components/Nav.astro";
import Footer from "@/components/Footer.astro";
---

<Layout title="Current Weather">
	<Nav />
	<main class="absolute w-screen h-screen grid place-items-center">
		<div class="p-6 rounded-xl bg-gray-600 dark:bg-gray-950">
			<h1 class="font-bold text-2xl text-gray-400 dark:text-gray-500">Current Weather</h1>
			<div class="text-white">
				<h1><b>Temperature:</b><h1 id="temperature"></h1></h1>
				<h1><b>Feels Like:</b><h1 id="apparent_temperature"></h1></h1>
				<h1><b>Precipitation:</b><h1 id="precipitation"></h1></h1>
				<h1><b>Wind Speed:</b><h1 id="wind_speed"></h1></h1>
				<h1><b>Wind Direction:</b><h1 id="wind_direction"></h1></h1>
			</div>
		</div>
	</main>
	<Footer />
</Layout>

<script>
	function convertDirectionToName(degrees: number): string {
		if (degrees < 22.5 || degrees > 337.5) return "N"
		if (degrees > 22.5 && degrees < 67.5) return "NE"
		return ""
	}

	async function setup(): Promise<void> {
	/*
		const params = {
			latitude: localStorage.getItem("lat")!,
			longitude: localStorage.getItem("lon")!,
			temperature_unit: localStorage.getItem("temp")!,
			wind_speed_unit: localStorage.getItem("wind")!,
			precipitation_unit: localStorage.getItem("precip")!,
			current: [
				"temperature_2m",
				"apparent_temperature",
				"weather_code",
				"precipitation",
				"wind_speed_10m",
				"wind_direction_10m"
			].toString()
		} as Record<string, string>;

		const url: string = "https://api.open-meteo.com/v1/forecast";

		const request = new URL(url);
		request.search = new URLSearchParams(params).toString();

		const response = await fetch(request.toString());
		const data = await response.json();
		*/

		const data = {
    "latitude": 41.999203,
    "longitude": -86.50192,
    "generationtime_ms": 0.11801719665527344,
    "utc_offset_seconds": 0,
    "timezone": "GMT",
    "timezone_abbreviation": "GMT",
    "elevation": 193,
    "current_units": {
        "time": "iso8601",
        "interval": "seconds",
        "temperature_2m": "°F",
        "apparent_temperature": "°F",
        "weather_code": "wmo code",
        "precipitation": "inch",
        "wind_speed_10m": "mp/h",
        "wind_direction_10m": "°"
    },
    "current": {
        "time": "2024-03-07T22:00",
        "interval": 900,
        "temperature_2m": 50.2,
        "apparent_temperature": 44,
        "weather_code": 3,
        "precipitation": 0,
        "wind_speed_10m": 8.3,
        "wind_direction_10m": 44
    }
}

		document.getElementById("temperature")!.innerText = `${data.current.temperature_2m} ${data.current_units.temperature_2m}`;

		document.getElementById("apparent_temperature")!.innerText = `${data.current.apparent_temperature} ${data.current_units.apparent_temperature}`;

		if (data.current_units.precipitation === "inch") {
			if (data.current.precipitation === 1) document.getElementById("precipitation")!.innerText = "1 inch";
			else document.getElementById("precipitation")!.innerText = `${data.current.precipitation} inches`;
		}
		if (data.current_units.precipitation === "mm") {
			if (data.current.precipitation === 1) document.getElementById("precipitation")!.innerText = "1 millimeter";
			else document.getElementById("precipitation")!.innerText = `${data.current.precipitation} millimeters`;
		}

		if (data.current_units.wind_speed_10m === "mp/h") {
			document.getElementById("wind_speed")!.innerText = `${data.current.wind_speed_10m} miles / hour`;
		}
		if (data.current_units.wind_speed_10m === "km/h") {
			document.getElementById("wind_speed")!.innerText = `${data.current.wind_speed_10m} kilometers / hour`;
		}

		document.getElementById("wind_direction")!.innerText = convertDirectionToName(data.current.wind_direction_10m) + data.current.wind_direction_10m;
	}

	setup();
	document.addEventListener("astro:after-swap", () => {
		if (window.location.pathname === "/Current") setup();
	});
</script>
