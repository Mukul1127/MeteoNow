---
/*
  MeteoWeather is a Weather App 
  Copyright (C) 2024 Mukul Kedia

  MeteoWeather is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published
  by the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  MeteoWeather is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with MeteoWeather. If not, see <https://www.gnu.org/licenses/>.
*/

import Layout from "@/layouts/Layout.astro";
import Nav from "@/components/Nav.astro";
import Footer from "@/components/Footer.astro";
---

<Layout title="Current Weather">
	<Nav />
	<main class="absolute w-screen h-screen grid place-items-center">
		<div class="p-6 rounded-xl bg-gray-600 dark:bg-gray-950">
			<div id="container" class="text-white space-y-2 animate-pulse">
				<h1 class="font-bold text-2xl text-gray-400 dark:text-gray-500">Current Weather</h1>

				<div class="bg-gray-200 h-5 rounded-md dark:bg-gray-700 flex gap-2 skeleton"><h1 id="temperature_label" class="font-bold"></h1><h1 id="temperature"></h1></div>
				<div class="bg-gray-200 h-5 rounded-md dark:bg-gray-700 flex gap-2 skeleton"><h1 id="apparent_temperature_label" class="font-bold"></h1><h1 id="apparent_temperature"></h1></div>
				<div class="bg-gray-200 h-5 rounded-md dark:bg-gray-700 flex gap-2 skeleton"><h1 id="precipitation_label" class="font-bold"></h1><h1 id="precipitation"></h1></div>
				<div class="bg-gray-200 h-5 rounded-md dark:bg-gray-700 flex gap-2 skeleton"><h1 id="wind_speed_label" class="font-bold"></h1><h1 id="wind_speed"></h1></div>
				<div class="bg-gray-200 h-5 rounded-md dark:bg-gray-700 flex gap-2 skeleton"><h1 id="wind_direction_label" class="font-bold"></h1><h1 id="wind_direction"></h1></div>
				<span id="srMessage" class="sr-only">Loading...</span>
			</div>
		</div>
	</main>
	<Footer />
</Layout>

<script>
	async function setup(): Promise<void> {
		const params = {
			latitude: localStorage.getItem("lat")!,
			longitude: localStorage.getItem("lon")!,
			temperature_unit: localStorage.getItem("temp")!,
			wind_speed_unit: localStorage.getItem("wind")!,
			precipitation_unit: localStorage.getItem("precip")!,
			current: [
				"temperature_2m",
				"apparent_temperature",
				"weather_code",
				"precipitation",
				"wind_speed_10m",
				"wind_direction_10m"
			].toString()
		} as Record<string, string>;

		const url: string = "https://api.open-meteo.com/v1/forecast";

		const request = new URL(url);
		request.search = new URLSearchParams(params).toString();

		const response = await fetch(request.toString());
		const data = await response.json();



		document.getElementById("container")!.classList.remove("animate-pulse");

		const skeletonList = document.getElementsByClassName("skeleton");

		for (const element of skeletonList) {
			element.classList.remove("bg-gray-200", "dark:bg-gray-700", "h-5")
		}

		document.getElementById("temperature_label")!.innerHTML = "Temperature:"
		document.getElementById("apparent_temperature_label")!.innerHTML = "Feels Like:"
		document.getElementById("precipitation_label")!.innerHTML = "Precipitation:"
		document.getElementById("wind_speed_label")!.innerHTML = "Wind Speed:"
		document.getElementById("wind_direction_label")!.innerHTML = "Wind Direction:"

		document.getElementById("srMessage")!.innerHTML = "Done Loading!"



		document.getElementById("temperature")!.innerText = `${data.current.temperature_2m} ${data.current_units.temperature_2m}`;

		document.getElementById("apparent_temperature")!.innerText = `${data.current.apparent_temperature} ${data.current_units.apparent_temperature}`;

		if (data.current_units.precipitation === "inch") {
			if (data.current.precipitation === 1) document.getElementById("precipitation")!.innerText = "1 inch";
			else document.getElementById("precipitation")!.innerText = `${data.current.precipitation} inches`;
		}
		if (data.current_units.precipitation === "mm") {
			if (data.current.precipitation === 1) document.getElementById("precipitation")!.innerText = "1 millimeter";
			else document.getElementById("precipitation")!.innerText = `${data.current.precipitation} millimeters`;
		}

		if (data.current_units.wind_speed_10m === "mp/h") {
			document.getElementById("wind_speed")!.innerText = `${data.current.wind_speed_10m} MPH`;
		}
		if (data.current_units.wind_speed_10m === "km/h") {
			document.getElementById("wind_speed")!.innerText = `${data.current.wind_speed_10m} KMH`;
		}

		document.getElementById("wind_direction")!.innerText = `${data.current.wind_direction_10m} ${data.current_units.wind_direction_10m}`;
	}

	setup();
	document.addEventListener("astro:after-swap", () => {
		if (window.location.pathname === "/Current") setup();
	});
</script>
